{"version":3,"sources":["utils/Common.ts","routes/Private.Route.tsx","services/getWays/Setting.GetWay.ts","services/Setting.Service.ts","components/Avatar.tsx","components/Layout.tsx","pages/login/Login.Form.tsx","pages/login/Login.Page.tsx","components/Spinner.tsx","pages/category/Category.Modal.Edit.tsx","pages/category/Category.Modal.Delete.tsx","pages/category/Category.Modal.Add.tsx","components/Header.tsx","pages/category/Category.Header.tsx","pages/category/Category.Form.tsx","pages/category/Category.Page.tsx","pages/product/Product.Header.tsx","pages/product/Product.Validate.ts","pages/product/Product.Modal.Add.tsx","pages/product/Product.Modal.Edit.tsx","pages/product/Product.Modal.Delete.tsx","pages/product/Product.Select.tsx","pages/product/Product.Form.tsx","pages/product/Product.Page.tsx","pages/order/Order.Top.tsx","pages/order/Order.Header.tsx","pages/order/Order.Modal.tsx","pages/order/Order.Form.tsx","pages/order/Order.Page.tsx","pages/statistic/Statistic.Header.tsx","pages/statistic/Statistic.Day.tsx","pages/statistic/Statistic.Month.tsx","pages/statistic/Statistic.Year.tsx","pages/statistic/Statistic.Form.tsx","pages/statistic/Statistic.Page.tsx","pages/register/Register.Data.tsx","pages/register/Register.Form.tsx","utils/Validate.ts","pages/register/Register.Page.tsx","pages/receipt/Receipt.Header.tsx","pages/receipt/Receipt.Modal.Add.tsx","pages/receipt/Receipt.Modal.Edit.tsx","pages/receipt/Receipt.Modal.Delete.tsx","pages/receipt/Receipt.Form.tsx","pages/receipt/Receipt.Page.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getTokenLocal","sessionStorage","getItem","formatMoney","money","toString","replace","FormatDate","timestamp","x","Date","getHours","getMinutes","getDate","getMonth","getFullYear","EnumURL","product","name","price","category","AnimationModal","setVisible","setConfirmLoading","ConvertStatus","status","ConvertStatusButton","RefeshRoute","history","path","push","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","location","HttpService","Axios","create","baseURL","timeout","withCredentials","headers","Authorization","SetToken","token","defaults","common","setItem","setTokenLocal","CreateAccountForStaff","user","a","post","firstName","lastName","address","phone","email","password","cPassword","Login","console","log","GetProfile","get","AddCategory","GetCategory","_id","GetListCategories","GetListCategorySorted","type","EditCategory","put","DeleteCategory","delete","AddProduct","Product","images","description","GetLengthOfProduct","GetLengthOfProductWithCategory","GetProduct","GetListProductWithPage","page","GetListProductSortByNameWithPage","GetListProductSortedByPriceWithPage","GetListProductWithCategory","idCategory","EditProduct","DeleteProduct","GetListOrders","GetListOrdersWithStatus","UpdateStatusOrder","id","OrderIsPaid","GetListOrderSortedByTime","StatisticOrderByDay","dateString","StatisticOrderByMonth","year","StatisticOrderByYear","UploadImage","file","fd","FormData","append","axios","UpdateImage","GetListReceipt","GetReceiptByID","AddReceipt","quantityStock","categoryID","EditReceipt","DeleteReceipt","MyAvatar","useState","setToken","setUser","useEffect","tokenLocal","then","res","data","result","catch","e","className","size","icon","src","Header","Layout","Sider","Content","MyLayout","children","collapsed","setCollapsed","url","window","useHistory","trigger","collapsible","Avatar","theme","mode","defaultSelectedKeys","Item","MenuUnfoldOutlined","DiffOutlined","SnippetsOutlined","UnorderedListOutlined","BarChartOutlined","UserAddOutlined","LogoutOutlined","onClick","removeItem","LockOutlined","style","padding","React","createElement","MenuFoldOutlined","margin","minHeight","LoginForm","message","setMessage","username","setUsername","setPassword","labelCol","span","wrapperCol","initialValues","remember","label","rules","required","onChange","target","value","Password","valuePropName","offset","htmlType","LoginPage","Spinner","CategoryModalEdit","show","setShow","modalText","setModalText","setName","confirmLoading","loadingModal","setLoadingModal","handleNotificationSuccess","notification","handleNotificationFailed","title","visible","onOk","onCancel","preventDefault","handleInputText","CategoryModalDelete","CategoryModalAdd","headerName","setShowAdd","CategoryHeader","Select","Option","nameSelected","handleSelectName","ArrowUpOutlined","ArrowDownOutlined","CategoryForm","loading","setLoading","categories","setCategories","setID","showAdd","showEdit","setShowEdit","showDelete","setShowDelete","setNameSelected","map","createdBy","updatedBy","CategoryPage","ProductHeader","priceSelected","handleSelectPrice","ValidateProduct","ProductModalAdd","setProduct","err","setErr","setFile","Validate","UploadImg","prev","min","handleInputPrice","files","handleInputFile","handleInputDescription","showSearch","width","placeholder","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","ProductModalEdit","handleUpdateImage","defaultValue","alt","ProductModalDelete","ProductSelect","typeSelected","handleChange","ProductForm","setPage","pageLength","setPageLength","products","setProducts","visibleAdd","setVisibleAdd","visibleEdit","setVisibleEdit","visibleDelete","setVisibleDelete","setPriceSelected","setTypeSelected","ListSortByName","GetListNormal","ListSortByPrice","defaultCurrent","current","total","ProductPage","OrderTop","OrderHeader","handleChangeTypeTime","OrderModal","OrderForm","orders","setOrders","setStatus","length","order","requiredDate","infoGuest","handleClickChangeStatus","paid","OrderPage","StatisticHeader","StatisticDay","click","setClick","date","setDate","count","setCount","setTotal","antIcon","LoadingOutlined","fontSize","spin","indicator","StatisticMonth","setYear","setData","config","setConfig","month","statistic","setStatistic","i","custom","height","xField","yField","xAxis","autoRotate","scrollbar","parseInt","picker","StatisticYear","StatisticForm","day","selected","setSelected","StatisticPage","FormDataRegister","RegisterForm","item","match","ValidatePassword","RegisterPage","ReceiptHeader","ReceiptModalAdd","receipt","setReceipt","setCategoryID","handleInputQuantityStock","ReceiptModalEdit","loadingReceipt","setLoadingReceipt","loadingCate","setLoadingCate","ReceiptModalDelete","ReceiptForm","receipts","setReceipts","dateGet","quantity","handleClickEdit","handleClickDelete","ReceiptPage","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d76b1e07.chunk.js","sourcesContent":["export const setTokenLocal = (token: string) => {\n  sessionStorage.setItem(\"token\", token);\n};\n\nexport const getTokenLocal = () => {\n  return sessionStorage.getItem(\"token\") || null;\n};\n\nexport const removeUserSession = () => {\n  sessionStorage.removeItem(\"token\");\n};\n\nexport const formatMoney = (money: number) => {\n  return money.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1 \") + \" đồng\";\n};\n\nexport const priceSize = {\n  S: 0,\n  M: 5000,\n  L: 10000,\n};\n\nexport const ConvertDate = (date: Date) => {\n  return `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}`;\n};\n\nexport const FormatDate = (timestamp: any) => {\n  const x = new Date(timestamp);\n  const hh = x.getHours();\n  const min = x.getMinutes();\n  const dd = x.getDate();\n  const mm = x.getMonth() + 1;\n  const yy = x.getFullYear();\n  return hh + \"h:\" + min + \"p \" + dd + \"/\" + mm + \"/\" + yy;\n};\n\nexport const EnumURL = {\n  baseUrl: \"http://127.0.0.1:2000\",\n  login: \"/login\",\n  category: \"/category\",\n  categories: \"/categories\",\n  product: \"/product\",\n  products: \"/products\",\n  sort: {\n    product: {\n      name: \"/products/sort/name\",\n      price: \"/products/sort/price\",\n    },\n    category: \"/categories/sort\",\n  },\n  order: \"/order\",\n  orders: \"/orders\",\n  orderUpdate: \"/order/update\",\n  statistic: \"/statistic\",\n  image: \"image\",\n  profile: \"/profile\",\n  staff: \"/staff\",\n  receipt: \"/receipt\",\n};\n\nexport const AnimationModal = (setVisible: any, setConfirmLoading: any) => {\n  setVisible(false);\n  setConfirmLoading(false);\n};\n\nexport const ConvertStatus = (status: string) => {\n  switch (status) {\n    case \"unconfirmed\": {\n      return \"Chưa xác nhận\";\n    }\n    case \"waiting\": {\n      return \"Đang chờ\";\n    }\n    case \"shipping\": {\n      return \"Đang giao\";\n    }\n    case \"shipped\": {\n      return \"Đã giao\";\n    }\n    case \"canceled\": {\n      return \"Đã hủy\";\n    }\n  }\n};\n\nexport const ConvertStatusButton = (status: string) => {\n  switch (status) {\n    case \"unconfirmed\": {\n      return \"Xác nhận\";\n    }\n    case \"waiting\": {\n      return \"Đang giao\";\n    }\n    case \"shipping\": {\n      return \"Đã nhận\";\n    }\n  }\n};\n\nexport const RefeshRoute = (history: any, path: string) => {\n  history.push(\"/\");\n  history.push(path);\n};\n\nexport const FormatQuantityStock = (quantity: number) => {\n  return (quantity/1000).toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, \"$1 \") + \" kg\";\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getTokenLocal } from '../utils/Common';\n\n//@ts-ignore\nfunction PrivateRoute({ component:  Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => getTokenLocal() ? <Component {...props} /> : <Redirect to={{ pathname: '/', state: { from: props.location } }} />}\n    />\n  )\n}\n\nexport default PrivateRoute;","import Axios from \"axios\";\nimport { getTokenLocal, setTokenLocal } from \"../../utils/Common\";\n\nconst HttpService = Axios.create({\n  baseURL: \"http://127.0.0.1:2000\",\n  timeout: 15000,\n  withCredentials: false,\n  headers: {\n    Authorization: \"Bearer \" + getTokenLocal(),\n  },\n});\nexport const SetToken = (token: string) => {\n  HttpService.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n  setTokenLocal(token);\n};\nexport default HttpService;\n","import HttpService from \"./getWays/Setting.GetWay\";\nimport { ProductDocument } from \"../interfaces/Product.Interface\";\nimport { EnumURL, getTokenLocal } from \"../utils/Common\";\nimport axios from \"axios\";\nimport UserDocument from \"interfaces/User.Interface\";\n\nexport const CreateAccountForStaff = async (user: UserDocument) => {\n  return await HttpService.post(EnumURL.staff, {\n    firstName: user.firstName,\n    lastName: user.lastName,\n    address: user.address,\n    phone: user.phone,\n    email: user.email,\n    password: user.password,\n    cPassword: user.cPassword,\n  });\n};\n\nexport const Login = async (email: string, password: string) => {\n  console.log('call login function api')\n  return HttpService.post(EnumURL.login, {\n    email: email,\n    password: password,\n  });\n};\n\nexport const GetProfile = async () => {\n  return await HttpService.get(EnumURL.profile);\n};\n\n//---CATEGORY\nexport const AddCategory = async (name: String) => {\n  return await HttpService.post(`${EnumURL.category}`, {\n    name: name,\n  });\n};\n\nexport const GetCategory = async (_id: String) => {\n  return await HttpService.get(`${EnumURL.category}/${_id}`);\n};\n\nexport const GetListCategories = async () => {\n  return await HttpService.get(EnumURL.categories);\n};\n\nexport const GetListCategorySorted = async (type: string) => {\n  return await HttpService.post(EnumURL.sort.category, {\n    type: type,\n  });\n};\n\nexport const EditCategory = async (_id: String, name: String) => {\n  return await HttpService.put(`${EnumURL.category}/${_id}`, {\n    name: name,\n  });\n};\n\nexport const DeleteCategory = async (_id: String) => {\n  return await HttpService.delete(`${EnumURL.category}/${_id}`);\n};\n\n//---PRODUCTS\nexport const AddProduct = async (Product: ProductDocument) => {\n  return await HttpService.post(EnumURL.product, {\n    name: Product.name,\n    price: Product.price,\n    images: Product.images,\n    description: Product.description,\n    category: Product.category._id,\n  });\n};\n\nexport const GetLengthOfProduct = async () => {\n  return await HttpService.get(`${EnumURL.products}/length`);\n};\n\nexport const GetLengthOfProductWithCategory = async (category: string) => {\n  return await HttpService.get(`${EnumURL.products}/length/${category}`);\n};\n\nexport const GetProduct = async (_id: string) => {\n  return await HttpService.get(`${EnumURL.product}/${_id}`);\n};\n\nexport const GetListProducts = async () => {\n  return await HttpService.get(EnumURL.products);\n};\n\nexport const GetListProductWithPage = async (page: number) => {\n  return await HttpService.get(`${EnumURL.products}/search/${page}`);\n};\n\nexport const GetListProductSortByName = async (type: string) => {\n  return await HttpService.post(EnumURL.sort.product.name, {\n    type: type,\n  });\n};\n\nexport const GetListProductSortByNameWithPage = async (\n  page: number,\n  type: string\n) => {\n  return await HttpService.post(`${EnumURL.sort.product.name}/${page}`, {\n    type: type,\n  });\n};\n\nexport const GetListProductSortedByPrice = async (type: string) => {\n  return await HttpService.post(EnumURL.sort.product.price, {\n    type: type,\n  });\n};\n\nexport const GetListProductSortedByPriceWithPage = async (\n  page: number,\n  type: string\n) => {\n  return await HttpService.post(`${EnumURL.sort.product.price}/${page}`, {\n    type: type,\n  });\n};\n\nexport const GetListProductWithCategory = async (idCategory: string) => {\n  return await HttpService.get(`${EnumURL.products}/${idCategory}`);\n};\n\nexport const EditProduct = async (Product: ProductDocument) => {\n  console.log(Product);\n  return await HttpService.put(`${EnumURL.product}/${Product._id}`, {\n    name: Product.name,\n    price: Product.price,\n    images: Product.images,\n    description: Product.description,\n    category: Product.category._id,\n  });\n};\n\nexport const DeleteProduct = async (_id: string) => {\n  return await HttpService.delete(`${EnumURL.product}/${_id}`);\n};\n\n//---ORDER\nexport const GetListOrders = async (page: number) => {\n  return await HttpService.get(`${EnumURL.orders}/${page}`);\n};\n\nexport const GetListOrdersWithStatus = async (status: string) => {\n  return await HttpService.get(`${EnumURL.orders}/status/${status}`);\n};\n\nexport const UpdateStatusOrder = async (id: string, status: string) => {\n  return await HttpService.post(`${EnumURL.orderUpdate}/${id}`, {\n    status: status,\n  });\n};\n\nexport const OrderIsPaid = async (id: string) => {\n  return await HttpService.post(`${EnumURL.order}/paid/${id}`);\n};\n\nexport const GetListOrderSortedByTime = async (type: string, page: number) => {\n  return await HttpService.post(`${EnumURL.order}/sorted`, {\n    type: type,\n    page: page,\n  });\n};\n\n//Statistic\nexport const StatisticOrderByDay = async (dateString: string) => {\n  return await HttpService.post(`${EnumURL.statistic}/day`, {\n    dateString: dateString,\n  });\n};\n\nexport const StatisticOrderByMonth = async (year: number) => {\n  return await HttpService.post(`${EnumURL.statistic}/month`, {\n    year: year,\n  });\n};\n\nexport const StatisticOrderByYear = async () => {\n  return await HttpService.get(`${EnumURL.statistic}/year`);\n};\n\n//Image\nexport const UploadImage = async (file: any, id: string) => {\n  const fd = new FormData();\n  fd.append(\"image\", file);\n  return await axios.post(`${EnumURL.baseUrl}/${EnumURL.image}/${id}`, fd, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: \"Bearer \" + getTokenLocal(),\n    },\n  });\n};\n\nexport const UpdateImage = async (file: any, id: string) => {\n  const fd = new FormData();\n  fd.append(\"image\", file);\n  return await axios.put(`${EnumURL.baseUrl}/${EnumURL.image}/${id}`, fd, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      Authorization: \"Bearer \" + getTokenLocal(),\n    },\n  });\n};\n\n//Receipt\nexport const GetListReceipt = async () => {\n  return await HttpService.get(EnumURL.receipt);\n};\n\nexport const GetReceiptByID = async (id: string) => {\n  return await HttpService.get(`${EnumURL.receipt}/${id}`);\n};\n\nexport const AddReceipt = async (\n  quantityStock: number,\n  price: number,\n  categoryID: string\n) => {\n  return await HttpService.post(EnumURL.receipt, {\n    quantityStock: quantityStock,\n    price: price,\n    category: categoryID,\n  });\n};\n\nexport const EditReceipt = async (\n  id: string,\n  quantityStock: number,\n  price: number,\n  categoryID: string\n) => {\n  return await HttpService.put(`${EnumURL.receipt}/${id}`, {\n    quantityStock: quantityStock,\n    price: price,\n    category: categoryID,\n  });\n};\n\nexport const DeleteReceipt = async (id: string) => {\n  return await HttpService.delete(`${EnumURL.receipt}/${id}`);\n};\n","import { useState, useEffect } from \"react\";\nimport { Avatar } from \"antd\";\nimport { UserOutlined } from '@ant-design/icons';\nimport { getTokenLocal } from \"utils/Common\";\nimport { GetProfile } from \"../services/Setting.Service\";\n\nconst MyAvatar = () => {\n  const [token, setToken] = useState<string>(\"\");\n  const [user, setUser] = useState<any>();\n\n  useEffect(() => {\n    const tokenLocal: any = getTokenLocal();\n    setToken(tokenLocal);\n  }, []);\n\n  useEffect(() => {\n    if (token) {\n      GetProfile()\n        .then(res => setUser(res.data.result))\n        .catch(e => console.log(e));\n    }\n  }, [token]);\n\n  return (\n    <div className=\"logo\">\n      <Avatar size={64} icon={<img src=\"https://img.icons8.com/bubbles/2x/admin-settings-male.png\"/>} />\n      <p className=\"info__login\">\n        {user ? user.lastName + \" \" + user.firstName : \"LOADING\"}\n      </p>\n    </div>\n  )\n}\n\nexport default MyAvatar\n","import React, { useState, useEffect } from 'react';\nimport { Layout, Menu } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  LockOutlined,\n  SnippetsOutlined,\n  UnorderedListOutlined,\n  BarChartOutlined,\n  LogoutOutlined,\n  UserAddOutlined,\n  DiffOutlined,\n} from '@ant-design/icons';\nimport { Switch, useHistory } from \"react-router-dom\";\nimport Avatar from \"./Avatar\";\nimport { Link } from 'react-router-dom';\nimport { getTokenLocal, removeUserSession } from '../utils/Common';\n\nconst { Header, Sider, Content } = Layout;\n\nconst MyLayout = ({ children }: any) => {\n  const [token, setToken] = useState<string>();\n  const [collapsed, setCollapsed] = useState(false);\n  const url = window.location.pathname;\n  const history = useHistory();\n\n  useEffect(() => {\n    const tokenLocal: any = getTokenLocal();\n    setToken(tokenLocal);\n  }, []);\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n\n  const handleClickLogout = () => {\n    removeUserSession();\n    history.push(\"/\");\n  }\n\n  return (\n    <>\n      <Sider trigger={null} collapsible collapsed={collapsed}>\n        <Avatar />\n        <Menu theme=\"dark\" mode=\"inline\"\n          defaultSelectedKeys={\n            url === \"/category\" ? [\"0\"] :\n              url === \"/receipt\" ? [\"1\"] :\n                url === \"/order\" ? [\"2\"] :\n                  url === \"/product\" ? [\"3\"] :\n                    url === \"/statistic\" ? [\"4\"] : \n                      url === \"/create-acccount\" ? [\"5\"] : [\"\"]}\n        >\n          {\n            !token ? (\n              <Menu.Item key=\"4\" icon={<LockOutlined />}>\n                Đăng nhập\n              </Menu.Item>\n            ) : (\n              <>\n                <Menu.Item key=\"0\" icon={<MenuUnfoldOutlined />}>\n                  <Link to=\"/category\">Danh mục</Link>\n                </Menu.Item>\n                <Menu.Item key=\"1\" icon={<DiffOutlined />}>\n                  <Link to=\"/receipt\">Phiếu nhập</Link>\n                </Menu.Item>\n                <Menu.Item key=\"2\" icon={<SnippetsOutlined />}>\n                  <Link to=\"/order\">Đơn hàng</Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\" icon={<UnorderedListOutlined />}>\n                  <Link to=\"/product\">Sản phẩm</Link>\n                </Menu.Item>\n                <Menu.Item key=\"4\" icon={<BarChartOutlined />}>\n                  <Link to=\"/statistic\">Thống kê</Link>\n                </Menu.Item>\n                <Menu.Item key=\"5\" icon={<UserAddOutlined />}>\n                  <Link to=\"/create-account\">Tạo tài khoản</Link>\n                </Menu.Item>\n                <Menu.Item icon={<LogoutOutlined />} onClick={handleClickLogout}>\n                  <Link to=\"statistic\">Đăng xuất</Link>\n                </Menu.Item>\n              </>\n            )\n          }\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          {React.createElement(collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n            className: 'trigger',\n            onClick: toggle,\n          })}\n        </Header>\n        <Content\n          className=\"site-layout-background\"\n          style={{\n            margin: '24px 16px',\n            padding: 24,\n            minHeight: 280,\n          }}\n        >\n          <Switch>\n            {children}\n          </Switch>\n        </Content>\n      </Layout>\n    </>\n  )\n}\n\nexport default MyLayout\n","import { useState } from 'react';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { Login } from 'services/Setting.Service';\nimport { SetToken } from 'services/getWays/Setting.GetWay';\nimport { useHistory } from 'react-router';\n\nconst LoginForm = () => {\n  const [message, setMessage] = useState<String>(\"\");\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const history = useHistory();\n\n  const handleClickLogin = () => {\n    if (!username || !password) {\n      return;\n    }\n    Login(username, password)\n      .then(res => {\n        console.log(res.data.token)\n        SetToken(res.data.token);\n        history.push(\"/category\");\n      })\n      .catch(() => {\n        setMessage(\"Đăng nhập thất bại\");\n      });\n  }\n\n  return (\n    <div className=\"login-page\">\n      <Form\n        name=\"basic\"\n        labelCol={{\n          span: 8,\n        }}\n        wrapperCol={{\n          span: 16,\n        }}\n        initialValues={{\n          remember: true,\n        }}\n      >\n        <Form.Item\n          label=\"Tài khoản\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: 'Tài khoản không được trống!',\n            },\n          ]}\n        >\n          <Input onChange={(e) => setUsername(e.target.value)} />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Mật khẩu\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: 'Mật khẩu không được trống!',\n            },\n          ]}\n        >\n          <Input.Password onChange={(e) => setPassword(e.target.value)} />\n        </Form.Item>\n\n        <Form.Item\n          name=\"remember\"\n          valuePropName=\"checked\"\n          wrapperCol={{\n            offset: 8,\n            span: 16,\n          }}\n        >\n          <Checkbox>Giữ đăng nhập</Checkbox>\n        </Form.Item>\n\n        <p className=\"release-status\">{message}</p>\n\n        <Form.Item\n          wrapperCol={{\n            offset: 8,\n            span: 16,\n          }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\" onClick={handleClickLogin}>\n            Đăng nhập\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import React from 'react';\nimport Layout from \"../../components/Layout\";\nimport Feed from \"./Login.Form\";\n\nconst LoginPage = () => {\n  return (\n    <Layout>\n      <Feed />\n    </Layout>\n  )\n}\n\nexport default LoginPage\n","import { Spin } from \"antd\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"spin\">\n      <Spin />\n    </div>\n  )\n}\n\nexport default Spinner\n","import { useState, useEffect, ChangeEvent, SetStateAction, Dispatch } from 'react';\nimport { Modal, Input, notification } from \"antd\";\nimport { EditCategory, GetCategory } from 'services/Setting.Service';\nimport { AnimationModal, RefeshRoute } from 'utils/Common';\nimport Spinner from 'components/Spinner';\nimport { useHistory } from \"react-router-dom\";\n\ninterface CategoryEdit {\n  _id: string;\n  show: boolean;\n  setShow: Dispatch<SetStateAction<boolean>>;\n}\n\nconst CategoryModalEdit = ({ _id, show, setShow }: CategoryEdit) => {\n  const [modalText, setModalText] = useState<String>('');\n  const [name, setName] = useState<string>(\"\");\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [loadingModal, setLoadingModal] = useState<Boolean>(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    GetCategory(_id)\n      .then(res => {\n        setLoadingModal(false);\n        setName(res.data.result.name);\n      })\n      .catch((e) => {\n        setLoadingModal(false);\n        console.log(e);\n      })\n  }, []);\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    EditCategory(_id, name)\n      .then(() => {\n        AnimationModal(setShow, setConfirmLoading);\n        RefeshRoute(history, \"/category\");\n        handleNotificationSuccess();\n      })\n      .catch((e) => {\n        console.log(e);\n        handleNotificationFailed();\n        setModalText('Cập nhật thất bại');\n        AnimationModal(setShow, setConfirmLoading);\n      })\n  };\n\n  const handleCancel = () => {\n    setShow(false);\n  };\n\n  const handleInputText = (e: ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    setName(e.target.value);\n  }\n\n  const handleNotificationSuccess = () => {\n    notification['success']({\n      message: 'Thông báo',\n      description:\n        'Sửa danh mục thành công',\n    });\n  }\n\n  const handleNotificationFailed = () => {\n    notification['warning']({\n      message: 'Thông báo',\n      description:\n        'Đã xảy ra lỗi',\n    });\n  }\n\n  return (\n    <Modal\n      title=\"Sửa danh mục\"\n      visible={show}\n      confirmLoading={confirmLoading}\n      onOk={handleOk}\n      onCancel={handleCancel}\n    >\n      {\n        loadingModal ? (\n          <Spinner />\n        ) : (\n          <>\n            {\n              modalText ? (\n                <p className=\"modal__status__error\">{modalText}</p>\n              ) : (\n                <>\n                  <p>*Tên:</p>\n                  <Input value={name} onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputText(e)} />\n                </>\n              )\n            }\n          </>\n        )\n      }\n    </Modal>\n  );\n}\n\nexport default CategoryModalEdit\n","import { Dispatch, SetStateAction, useState } from 'react';\nimport { DeleteCategory } from 'services/Setting.Service';\nimport { AnimationModal, RefeshRoute } from 'utils/Common';\nimport { Modal, notification } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface CategoryDelete {\n  _id: string;\n  show: boolean;\n  setShow: Dispatch<SetStateAction<boolean>>;\n}\n\nconst CategoryModalDelete = ({ _id, show, setShow }: CategoryDelete) => {\n  const [modalText, setModalText] = useState<String>('');\n  const [confirmLoading, setConfirmLoading] = useState<boolean>(false);\n  const history = useHistory();\n  \n  const handleOk = () => {\n    setConfirmLoading(true);\n    DeleteCategory(_id)\n      .then(() => {\n        AnimationModal(setShow, setConfirmLoading);\n        RefeshRoute(history, \"/category\");\n        handleNotificationSuccess();\n      })\n      .catch((e) => {\n        console.log(e);\n        handleNotificationFailed();\n        setModalText(\"Đã xảy ra lỗi!\");\n        AnimationModal(setShow, setConfirmLoading);\n      })\n  }\n\n  const handleCancel = () => {\n    setShow(false);\n  }\n\n  const handleNotificationSuccess = () => {\n    notification['success']({\n      message: 'Thông báo',\n      description:\n        'Xóa danh mục thành công',\n    });\n  }\n\n  const handleNotificationFailed = () => {\n    notification['warning']({\n      message: 'Thông báo',\n      description:\n        'Đã xảy ra lỗi',\n    });\n  }\n\n  return (\n    <Modal\n      title=\"Xóa danh mục\"\n      visible={show}\n      confirmLoading={confirmLoading}\n      onOk={handleOk}\n      onCancel={handleCancel}\n    >\n      {\n        modalText ? (\n          <p className=\"modal__status__error\">{modalText}</p>\n        ) : (\n          <p>Bạn có chắc chắn muốn xóa ?</p>\n        )\n      }\n    </Modal>\n  )\n}\n\nexport default CategoryModalDelete\n","import { useState, ChangeEvent, SetStateAction, Dispatch } from 'react';\nimport { Modal, Input, Form, notification } from \"antd\";\nimport { AddCategory } from 'services/Setting.Service';\nimport { AnimationModal, RefeshRoute } from \"utils/Common\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface CategoryAdd {\n  show: boolean;\n  setShow: Dispatch<SetStateAction<boolean>>;\n}\n\nconst CategoryModalAdd = ({ show, setShow }: CategoryAdd) => {\n  const [modalText, setModalText] = useState<string>('');\n  const [name, setName] = useState<string>(\"\");\n  const [confirmLoading, setConfirmLoading] = useState(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const history = useHistory();\n\n  const handleOk = () => {\n    if (!name) {\n      setMessage(\"Tên danh mục không được trống\");\n      return;\n    }\n\n    setConfirmLoading(true);\n    AddCategory(name)\n      .then(() => {\n        AnimationModal(setShow, setConfirmLoading);\n        RefeshRoute(history, \"/category\");\n        handleNotificationSuccess();\n      })\n      .catch((e) => {\n        console.log(e);\n        setModalText('Thêm danh mục thất bại');\n        handleNotificationFailed();\n        AnimationModal(setShow, setConfirmLoading);\n      })\n  };\n\n  const handleCancel = () => {\n    setShow(false);\n  };\n\n  const handleInputText = (e: ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setName(e.target.value);\n  }\n\n  const handleNotificationSuccess = () => {\n    notification[\"success\"]({\n      message: 'Thông báo',\n      description:\n        'Thêm danh mục thành công',\n    });\n  }\n\n  const handleNotificationFailed = () => {\n    notification[\"warning\"]({\n      message: 'Thông báo',\n      description:\n        'Đã xảy ra lỗi!',\n    });\n  }\n\nreturn (\n  <Modal\n    title=\"Thêm danh mục\"\n    visible={show}\n    confirmLoading={confirmLoading}\n    onOk={handleOk}\n    onCancel={handleCancel}\n  >\n    {\n      modalText ? (\n        <p className=\"modal__status__error\">{modalText}</p>\n      ) : (\n        <Form.Item\n          label=\"Tên danh mục\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: 'Tên danh mục không được trống!',\n            },\n          ]}\n        >\n          <Input onChange={(e) => handleInputText(e)} />\n          <p className=\"modal__status__error\">{message}</p>\n        </Form.Item>\n\n      )\n    }\n  </Modal>\n);\n}\n\nexport default CategoryModalAdd\n","import { Button } from \"antd\";\n\ninterface HeaderDocument {\n  headerName: String;\n  setShowAdd: any;\n}\n\nconst Header = ({ headerName, setShowAdd } : HeaderDocument) => {\n  const handleClickAdd = () => {\n    setShowAdd(true);\n  }\n\n  return (\n    <div className=\"header\">\n      <h3 className=\"header__title\">{headerName}</h3>\n      <Button className=\"header__button\" onClick={handleClickAdd}>\n        + Thêm\n      </Button>\n    </div>\n  )\n}\n\nexport default Header\n","import { Select } from \"antd\";\nimport { ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons\";\n\ninterface CategoryHeaderDocument {\n  nameSelected: string;\n  handleSelectName(value: string): void;\n}\n\nconst { Option } = Select;\n\nconst CategoryHeader = ({ nameSelected, handleSelectName }: CategoryHeaderDocument) => {\n  return (\n    <div className=\"category__header\"> \n      <div className=\"category__header__item__text\">\n        <span className={nameSelected === \"increment\" ? \"category__header__item__selected\" : \"\"}>\n          <ArrowUpOutlined className=\"category__header__item__arrow\" onClick={() => handleSelectName(\"increment\")} />\n        </span>\n        <span className={nameSelected === \"decrement\" ? \"category__header__item__selected\" : \"\"}>\n          <ArrowDownOutlined className=\"category__header__item__arrow\" onClick={() => handleSelectName(\"decrement\")} />\n        </span>\n        <span>Tên danh mục</span>\n      </div>\n      <span className=\"category__header__item__text\">Người tạo</span>\n      <span className=\"category__header__item__text\">Người chỉnh sửa</span>\n      <span className=\"category__header__item__text\">Sửa/Xóa danh mục</span>\n    </div>\n  )\n}\n\nexport default CategoryHeader\n","import { useState, useEffect } from 'react';\nimport { GetListCategories, GetListCategorySorted } from \"services/Setting.Service\";\nimport { CategoryDocument } from 'interfaces/Category.Inteface';\nimport CategoryModalEdit from './Category.Modal.Edit';\nimport CategoryModalDelete from './Category.Modal.Delete';\nimport CategoryModalAdd from './Category.Modal.Add';\nimport Spinner from 'components/Spinner';\nimport Header from 'components/Header';\nimport HeaderSort from \"./Category.Header\";\n\nconst CategoryForm = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [categories, setCategories] = useState<CategoryDocument[]>();\n  const [id, setID] = useState<string>(\"\");\n  const [showAdd, setShowAdd] = useState<boolean>(false);\n  const [showEdit, setShowEdit] = useState<boolean>(false);\n  const [showDelete, setShowDelete] = useState<boolean>(false);\n  const [nameSelected, setNameSelected] = useState<string>(\"normal\");\n\n  useEffect(() => {\n    if (nameSelected === \"normal\") {\n      GetListCategories()\n        .then(res => {\n          setCategories(res.data.result);\n          setLoading(false);\n        })\n        .catch((e) => {\n          console.log(e);\n          setLoading(false);\n        });\n      return;\n    }\n\n    GetListCategorySorted(nameSelected)\n      .then(res => {\n        setLoading(false);\n        setCategories(res.data.result);\n      })\n      .catch(e => {\n        setLoading(false);\n        console.log(e);\n      });\n  }, [nameSelected]);\n\n  const handleClickEdit = (_id: string): any => {\n    setID(_id);\n    setShowEdit(true);\n  }\n\n  const handleClickDelete = (_id: string): any => {\n    setID(_id);\n    setShowDelete(true);\n  }\n\n  const handleSelectName = (value: string) => {\n    setLoading(true);\n    setNameSelected(value);\n  }\n\n  return (\n    <div className=\"category\">\n      {\n        loading ? (\n          <Spinner />\n        ) : (\n          <>\n            <Header headerName=\"Danh mục\" setShowAdd={setShowAdd} />\n            <HeaderSort\n              nameSelected={nameSelected}\n              handleSelectName={handleSelectName}\n            />\n            {\n              categories && categories.map(category => {\n                return (\n                  <div className=\"category__item\" key={category._id}>\n                    <span className=\"category__item__text\">{category.name}</span>\n                    <span className=\"category__item__text\">{(category.createdBy)}</span>\n                    <span className=\"category__item__text\">{(category.updatedBy)}</span>\n                    <span className=\"category__item__text\">\n                      <span className=\"category__item__text__button\" onClick={() => handleClickEdit(category._id)}>📝</span>\n                      <span className=\"category__item__text__button\" onClick={() => handleClickDelete(category._id)}>🗑️</span>\n                    </span>\n                  </div>\n                )\n              })\n            }\n            {\n              showAdd === true && (\n                <CategoryModalAdd show={showAdd} setShow={setShowAdd} />\n              )\n            }\n            {\n              (showEdit === true && id) && (\n                <CategoryModalEdit _id={id} show={showEdit} setShow={setShowEdit} />\n              )\n            }\n            {\n              (showDelete === true && id) && (\n                <CategoryModalDelete _id={id} show={showDelete} setShow={setShowDelete} />\n              )\n            }\n          </>\n        )\n      }\n    </div>\n  )\n}\n\nexport default CategoryForm\n","import Layout from \"../../components/Layout\";\nimport Feed from \"./Category.Form\";\n\nconst CategoryPage = () => {\n  return (\n    <Layout>\n      <Feed />\n    </Layout>\n  )\n}\n\nexport default CategoryPage\n","import { Select } from \"antd\";\nimport { ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons\";\n\ninterface ProductHeaderDocument {\n  nameSelected: string;\n  priceSelected: string;\n  handleSelectName(value: string): void;\n  handleSelectPrice(value: string): void;\n}\n\nconst { Option } = Select;\n\nconst ProductHeader = ({ nameSelected, priceSelected, handleSelectName, handleSelectPrice }: ProductHeaderDocument) => {\n  return (\n    <div className=\"product__header\">\n      <div className=\"product__header__item__text\">\n        <span className={nameSelected === \"increment\" ? \"product__header__item__selected\" : \"\"}>\n          <ArrowUpOutlined className=\"product__header__item__arrow\" onClick={() => handleSelectName(\"increment\")} />\n        </span>\n        <span className={nameSelected === \"decrement\" ? \"product__header__item__selected\" : \"\"}>\n          <ArrowDownOutlined className=\"product__header__item__arrow\" onClick={() => handleSelectName(\"decrement\")} />\n        </span>\n        <span>Tên sản phẩm</span>\n      </div>\n      <span className=\"product__header__item__text\">Hình ảnh</span>\n      <div className=\"product__header__item__text\">\n        <span className={priceSelected === \"decrement\" ? \"product__header__item__selected\" : \"\"}>\n          <ArrowUpOutlined className=\"product__header__item__arrow\" onClick={() => handleSelectPrice(\"decrement\")} />\n        </span>\n        <span className={priceSelected === \"increment\" ? \"product__header__item__selected\" : \"\"}>\n          <ArrowDownOutlined className=\"product__header__item__arrow\" onClick={() => handleSelectPrice(\"increment\")} />\n        </span>\n        <span>Giá</span>\n      </div>\n      <span className=\"product__header__item__text\">Mô tả</span>\n      <span className=\"product__header__item__text\">Sửa</span>\n      <span className=\"product__header__item__text\">Xóa</span>\n    </div>\n  )\n}\n\nexport default ProductHeader\n","import { ProductDocument } from \"interfaces/Product.Interface\";\n\nconst ValidateProduct = (product: ProductDocument) => {\n  if (\n    !product.name ||\n    !product.price ||\n    !product.category ||\n    !product.images\n  ) {\n    return false;\n  }\n\n  if (product.price < 0) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default ValidateProduct;\n","import { useState, ChangeEvent, useEffect, Dispatch, SetStateAction } from 'react';\nimport { Modal, Input, Select, notification } from \"antd\";\nimport { AddProduct, GetListCategories, UploadImage } from 'services/Setting.Service';\nimport { ProductDocument } from \"interfaces/Product.Interface\";\nimport { CategoryDocument } from 'interfaces/Category.Inteface';\nimport { AnimationModal, RefeshRoute } from 'utils/Common';\nimport Spinner from 'components/Spinner';\nimport Validate from \"./Product.Validate\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface CategoryAdd {\n  visible: boolean;\n  setVisible: Dispatch<SetStateAction<boolean>>;\n}\n\nconst { Option } = Select;\n\nconst ProductModalAdd = ({ visible, setVisible }: CategoryAdd) => {\n  const [product, setProduct] = useState<ProductDocument>({\n    _id: \"\",\n    name: \"\",\n    price: 0,\n    images: [\"\"],\n    description: \"\",\n    category: {\n      _id: \"\",\n      name: \"\"\n    }\n  });\n  const [categories, setCategories] = useState<CategoryDocument[]>();\n  const [confirmLoading, setConfirmLoading] = useState<boolean>(false);\n  const [message, setMessage] = useState<String>(\"\");\n  const [err, setErr] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [file, setFile] = useState<FileList | null>();\n  const history = useHistory();\n\n  useEffect(() => {\n    GetListCategories()\n      .then((res) => {\n        setCategories(res.data.result);\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(e);\n        setLoading(false);\n      })\n  }, []);\n\n  const UploadImg = (id: string) => {\n    UploadImage(file, id)\n      .then(() => {\n        AnimationModal(setVisible, setConfirmLoading);\n        RefeshRoute(history, \"/product\");\n        handleNotificationSuccess();\n      })\n      .catch((e) => {\n        console.log(e);\n        setMessage(\"Thêm sản phẩm thất bại\");\n        handleNotificationFailed();\n        AnimationModal(setVisible, setConfirmLoading);\n      });\n  }\n\n  const handleOk = () => {\n    if (!Validate(product)) {\n      setErr(\"Hoàn thành đầy đủ các thông tin\");\n      return;\n    }\n\n    setConfirmLoading(true);\n    AddProduct(product)\n      .then((res) => {\n        const id = res.data.result._id;\n        UploadImg(id);\n      })\n      .catch((e) => {\n        console.log(e);\n        setMessage(\"Thêm sản phẩm thất bại\");\n        AnimationModal(setVisible, setConfirmLoading);\n      });\n  };\n\n  const handleInputText = (e: ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setProduct(prev => ({ ...prev, name: e.target.value }))\n  }\n\n  const handleInputPrice = (e: ChangeEvent<HTMLInputElement>) => {\n    setMessage(\"\");\n    setProduct(prev => ({ ...prev, price: e.target.value as any }))\n  }\n\n  const handleInputFile = (e: ChangeEvent<HTMLInputElement>) => {\n    const files: any = e.target.files;\n    setFile(files[0]);\n  }\n\n  const handleInputDescription = (e: ChangeEvent<HTMLInputElement>) => {\n    setMessage(\"\");\n    setProduct(prev => ({ ...prev, description: e.target.value }))\n  }\n\n  const onChange = (value: string) => {\n    setProduct(prev => ({ ...prev, category: { _id: value, name: \"\" } }));\n  }\n\n  const handleNotificationSuccess = () => {\n    notification['success']({\n      message: 'Thông báo',\n      description:\n        'Thêm sản phẩm thành công',\n    });\n  }\n\n  const handleNotificationFailed = () => {\n    notification['warning']({\n      message: 'Thông báo',\n      description:\n        'Đã xảy ra lỗi',\n    });\n  }\n\n  return (\n    <Modal\n      title=\"Thêm sản phẩm\"\n      visible={visible}\n      confirmLoading={confirmLoading}\n      onOk={handleOk}\n      onCancel={() => setVisible(false)}\n    >\n      {\n        message ? (\n          <p className=\"modal__status__error\">{message}</p>\n        ) : (\n          <>\n            {\n              loading ? (\n                <Spinner />\n              ) : (\n                <>\n                  <p>*Tên sản phẩm</p>\n                  <Input onChange={(e) => handleInputText(e)} />\n                  <p>*Giá</p>\n                  <Input type=\"number\" min=\"1\" onChange={(e) => handleInputPrice(e)} />\n                  <p>*Ảnh</p>\n                  <Input type=\"file\" onChange={(e) => handleInputFile(e)} />\n                  <p>*Mô tả</p>\n                  <Input type=\"text\" onChange={(e) => handleInputDescription(e)} />\n                  <p>*Loại</p>\n                  <Select\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Loại danh mục\"\n                    optionFilterProp=\"children\"\n                    onChange={onChange}\n                    filterOption={(input, option) =>\n                      //@ts-ignore\n                      option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {\n                      categories && categories.map(category => {\n                        return (\n                          <Option key={category._id}\n                            value={category._id}\n                          >\n                            {category.name}\n                          </Option>\n                        )\n                      })\n                    }\n                  </Select>\n                  {err && err && <p className=\"release-status\">{err}</p>}\n                </>\n              )\n            }\n          </>\n        )\n      }\n    </Modal>\n  );\n}\n\nexport default ProductModalAdd\n","import { useState, useEffect, ChangeEvent, Dispatch, SetStateAction } from 'react';\nimport { Modal, Input, notification } from \"antd\";\nimport { EditProduct, GetListCategories, GetProduct, UpdateImage } from 'services/Setting.Service';\nimport Spinner from 'components/Spinner';\nimport { ProductDocument } from 'interfaces/Product.Interface';\nimport { AnimationModal, EnumURL, RefeshRoute } from \"utils/Common\";\nimport { Select } from \"antd\";\nimport { CategoryDocument } from 'interfaces/Category.Inteface';\nimport Validate from \"./Product.Validate\";\nimport { useHistory } from \"react-router-dom\"; \n\ninterface ProductEdit {\n  _id: string;\n  visible: boolean;\n  setVisible: Dispatch<SetStateAction<boolean>>;\n}\n\nconst { Option } = Select;\n\nconst ProductModalEdit = ({ _id, visible, setVisible }: ProductEdit) => {\n  const [modalText, setModalText] = useState<String>('');\n  const [product, setProduct] = useState<ProductDocument>({\n    _id: \"\",\n    name: \"\",\n    price: 0,\n    images: [\"\"],\n    description: \"\",\n    category: {\n      _id: \"\",\n      name: \"\"\n    }\n  });\n  const [file, setFile] = useState<FileList | null>();\n  const [categories, setCategories] = useState<CategoryDocument[]>();\n  const [confirmLoading, setConfirmLoading] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [message, setMessage] = useState<string>();\n  const history = useHistory();\n\n  useEffect(() => {\n    GetProduct(_id)\n      .then(res => {\n        setProduct(res.data.result);\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(e);\n        setLoading(false);\n      })\n  }, []);\n\n  useEffect(() => {\n    GetListCategories()\n      .then(res => {\n        setCategories(res.data.result)\n      })\n      .catch(e => {\n        console.log(e)\n      });\n  }, [])\n\n  const handleOk = () => {\n    if (!Validate(product)) {\n      setMessage(\"Hãy hoàn thành đầy đủ các thông tin\")\n      return;\n    }\n\n    setConfirmLoading(true);\n    EditProduct(product)\n      .then(() => {\n        AnimationModal(setVisible, setConfirmLoading);\n        if (file) handleUpdateImage(product._id);\n        RefeshRoute(history, \"/product\");\n        handleNotificationSuccess();\n      })\n      .catch((e) => {\n        console.log(e);\n        setModalText('Cập nhật thất bại');\n        handleNotificationFailed();\n        AnimationModal(setVisible, setConfirmLoading);\n      });\n  };\n\n  const handleInputText = (e: ChangeEvent<HTMLInputElement>, type: string) => {\n    setMessage(\"\");\n    if (type === \"name\") setProduct(prev => ({ ...prev, name: e.target.value }));\n    if (type === \"price\") setProduct(prev => ({ ...prev, price: e.target.value as any }));\n    if (type === \"description\") setProduct(prev => ({ ...prev, description: e.target.value }));\n  }\n\n  const handleChangeSelect = (value: string) => {\n    setProduct(prev => ({ ...prev, category: { _id: value, name: \"\" } }));\n  }\n\n  const handleInputImage = (e: ChangeEvent<HTMLInputElement>) => {\n    const files: any = e.target.files;\n    setFile(files[0]);\n  }\n\n  const handleUpdateImage = (id: string) => {\n    UpdateImage(file, id)\n      .then(() => {\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(e);\n        setLoading(false);\n      });\n  }\n\n  const handleNotificationSuccess = () => {\n    notification['success']({\n      message: 'Thông báo',\n      description:\n        'Sửa sản phẩm thành công',\n    });\n  }\n\n  const handleNotificationFailed = () => {\n    notification['warning']({\n      message: 'Thông báo',\n      description:\n        'Đã xảy ra lỗi',\n    });\n  }\n\n  return (\n    <Modal\n      title=\"Sửa danh mục\"\n      visible={visible}\n      confirmLoading={confirmLoading}\n      onOk={handleOk}\n      onCancel={() => setVisible(false)}\n    >\n      {\n        loading ? (\n          <Spinner />\n        ) : (\n          <>\n            {\n              modalText ? (\n                <p className=\"modal__status__error\">{modalText}</p>\n              ) : (\n                <>\n                  <p>*Tên sản phẩm:</p>\n                  <Input value={product.name} onChange={(e) => handleInputText(e, \"name\")} />\n                  <p>*Giá:</p>\n                  <Input value={product.price} type=\"number\" onChange={(e) => handleInputText(e, \"price\")} />\n                  <p>*Mô tả:</p>\n                  <Input value={product.description} onChange={(e) => handleInputText(e, \"description\")} />\n                  <p>*Thể loại:</p>\n                  {\n                    product && categories && (\n                      <Select defaultValue={product.category._id} onChange={handleChangeSelect} style={{ width: 200 }}>\n                        {\n                          categories.map(category => {\n                            return (\n                              <Option key={category._id} value={category._id}>{category.name}</Option>\n                            )\n                          })\n                        }\n                      </Select>\n                    )\n                  }\n                  <p>*Hình ảnh:</p>\n                  <div className=\"product__modal__edit\">\n                    <img className=\"product__modal__edit__image\"\n                      src={`${EnumURL.baseUrl}${product.images[0].name}`}\n                      alt=\"i\"\n                    />\n                    <Input type=\"file\" onChange={handleInputImage} />\n                  </div>\n                  {message && <p className=\"release-status\">{message}</p>}\n                </>\n              )\n            }\n          </>\n        )\n      }\n    </Modal>\n  );\n}\n\nexport default ProductModalEdit\n","import { Dispatch, SetStateAction, useState } from 'react';\nimport { DeleteProduct } from 'services/Setting.Service';\nimport { Modal, notification } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { AnimationModal, RefeshRoute } from 'utils/Common';\n\ninterface ProductDelete {\n  _id: string;\n  visible: boolean;\n  setVisible: Dispatch<SetStateAction<boolean>>;\n}\n\nconst ProductModalDelete = ({ _id, visible, setVisible }: ProductDelete) => {\n  const [modalText, setModalText] = useState<string>('');\n  const [confirmLoading, setConfirmLoading] = useState<boolean>(false);\n  const history = useHistory();\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    DeleteProduct(_id)\n      .then(() => {\n        AnimationModal(setVisible, setConfirmLoading);\n        RefeshRoute(history, \"/product\");\n        handleNotificationSuccess();\n      })\n      .catch((e) => {\n        console.log(e);\n        setModalText(\"Đã xảy ra lỗi!\");\n        handleNotificationFailed();\n        AnimationModal(setVisible, setConfirmLoading);\n      });\n  }\n\n  const handleNotificationSuccess = () => {\n    notification['success']({\n      message: 'Thông báo',\n      description:\n        'Xóa sản phẩm thành công',\n    });\n  }\n\n  const handleNotificationFailed = () => {\n    notification['warning']({\n      message: 'Thông báo',\n      description:\n        'Đã xảy ra lỗi',\n    });\n  }\n\n  return (\n    <Modal\n      title=\"Xóa sản phẩm\"\n      visible={visible}\n      confirmLoading={confirmLoading}\n      onOk={handleOk}\n      onCancel={() => setVisible(false)}\n    >\n      {\n        modalText ? (\n          <p className=\"modal__status__error\">{modalText}</p>\n        ) : (\n          <p>Bạn có chắc chắn muốn xóa ?</p>\n        )\n      }\n    </Modal>\n  )\n}\n\nexport default ProductModalDelete\n","import { FC } from \"react\";\nimport { Select } from \"antd\";\nimport { CategoryDocument } from \"interfaces/Category.Inteface\";\n\ninterface ProductSelectProps {\n  typeSelected: string;\n  categories: CategoryDocument[] | undefined;\n  handleChange(value: string): void;\n}\n\nconst { Option } = Select;\n\nconst ProductSelect: FC<ProductSelectProps> = ({ typeSelected, categories, handleChange }) => {\n  return (\n    <div className=\"product__select\">\n      <span className=\"product__select__type\">Loại: </span>\n      <Select defaultValue={typeSelected} style={{ width: 150 }} onChange={handleChange}>\n        <Option value=\"all\">Tất cả</Option>\n        {\n          categories && categories.map(category => {\n            return (\n              <Option key={category._id} value={category._id}>{category.name}</Option>\n            )\n          })\n        }\n      </Select>\n    </div>\n  )\n}\n\nexport default ProductSelect\n","import { useState, useEffect } from 'react';\nimport Spinner from 'components/Spinner';\nimport {\n  GetLengthOfProduct,\n  GetLengthOfProductWithCategory,\n  GetListCategories,\n  GetListProductWithPage,\n  GetListProductWithCategory,\n  GetListProductSortByNameWithPage,\n  GetListProductSortedByPriceWithPage\n} from \"services/Setting.Service\";\nimport { ProductDocument } from 'interfaces/Product.Interface';\nimport Header from \"components/Header\";\nimport HeaderSort from \"./Product.Header\";\nimport ProductModalAdd from './Product.Modal.Add';\nimport ProductModalEdit from './Product.Modal.Edit';\nimport ProductModalDelete from './Product.Modal.Delete';\nimport { formatMoney, EnumURL } from 'utils/Common';\nimport Selecter from \"./Product.Select\";\nimport { CategoryDocument } from 'interfaces/Category.Inteface';\nimport { Pagination } from 'antd';\n\nconst ProductForm = () => {\n  const [page, setPage] = useState<number>(1);\n  const [pageLength, setPageLength] = useState<number>(6);\n  const [products, setProducts] = useState<ProductDocument[]>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [visibleAdd, setVisibleAdd] = useState<boolean>(false);\n  const [visibleEdit, setVisibleEdit] = useState<boolean>(false);\n  const [visibleDelete, setVisibleDelete] = useState<boolean>(false);\n  const [nameSelected, setNameSelected] = useState<string>(\"normal\");\n  const [priceSelected, setPriceSelected] = useState<string>(\"normal\");\n  const [categories, setCategories] = useState<CategoryDocument[]>();\n  const [typeSelected, setTypeSelected] = useState<string>(\"all\");\n  const [id, setID] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (nameSelected === \"\") {\n      return;\n    }\n\n    if (nameSelected === \"normal\") {\n      GetListNormal();\n      return;\n    }\n\n    ListSortByName();\n  }, [nameSelected]);\n\n  useEffect(() => {\n    if (priceSelected === \"\") {\n      return;\n    }\n\n    if (priceSelected === \"normal\") {\n      GetListNormal();\n      return;\n    }\n\n    ListSortByPrice();\n  }, [priceSelected]);\n\n  useEffect(() => {\n    GetListNormal();\n  }, [page]);\n\n  useEffect(() => {\n    GetListCategories()\n      .then((res) => {\n        setCategories(res.data.result);\n      })\n      .catch((e) => {\n        console.log(e);\n      })\n  }, []);\n\n  const GetListNormal = () => {\n    GetLengthOfProduct()\n      .then(res => setPageLength(res.data.result))\n      .catch(e => console.log(e));\n\n    GetListProductWithPage(page)\n      .then(res => {\n        setLoading(false);\n        setProducts(res.data.result);\n      })\n      .catch((e) => {\n        console.log(e);\n        setLoading(false);\n      });\n  }\n\n  const ListSortByName = () => {\n    GetListProductSortByNameWithPage(page, nameSelected)\n      .then(res => {\n        setLoading(false);\n        setProducts(res.data.result);\n      })\n      .catch(e => {\n        setLoading(false);\n        console.log(e);\n      })\n  }\n\n  const ListSortByPrice = () => {\n    GetListProductSortedByPriceWithPage(page, priceSelected)\n      .then(res => {\n        setLoading(false);\n        setProducts(res.data.result);\n      })\n      .catch(e => {\n        console.log(e);\n        setLoading(false);\n      })\n  }\n\n  const handleClickEdit = (_id: string) => {\n    setVisibleEdit(true);\n    setID(_id);\n  }\n\n  const handleClickDelete = (_id: string) => {\n    setVisibleDelete(true);\n    setID(_id);\n  }\n\n  const handleSelectName = (value: string) => {\n    setLoading(true);\n    setNameSelected(value);\n    setPriceSelected(\"\");\n  }\n\n  const handleSelectPrice = (value: string) => {\n    setLoading(true);\n    setPriceSelected(value);\n    setNameSelected(\"\");\n  }\n\n  const handleChangeSelectType = (value: string) => {\n    setTypeSelected(value);\n    setLoading(true);\n\n    GetLengthOfProductWithCategory(value)\n      .then(res => setPageLength(res.data.result))\n      .catch(e => console.log(e));\n\n    if (value === \"all\") {\n      GetListNormal();\n      return;\n    }\n\n    GetListProductWithCategory(value)\n      .then(res => {\n        setProducts(res.data.result);\n        setLoading(false);\n      })\n      .catch(e => {\n        console.log(e)\n        setLoading(false);\n      });\n  }\n\n  const handleChangePagination = (current: any) => {\n    setPage(current);\n    setLoading(true);\n  }\n\n  return (\n    <>\n      <div className=\"product\">\n        <Header headerName=\"Sản phẩm\" setShowAdd={setVisibleAdd} />\n        <Selecter\n          typeSelected={typeSelected}\n          categories={categories}\n          handleChange={handleChangeSelectType}\n        />\n        <HeaderSort\n          nameSelected={nameSelected}\n          priceSelected={priceSelected}\n          handleSelectName={handleSelectName}\n          handleSelectPrice={handleSelectPrice}\n        />\n        {\n          loading ? (\n            <Spinner />\n          ) : (\n            <>\n              {\n                products && products.map(product => {\n                  return (\n                    <div className=\"product__item\" key={product._id}>\n                      <span className=\"product__item__text\">{product.name}</span>\n                      <span className=\"product__item__text\">\n                        <img className=\"product__item__img\" src={product.images[0] && `${EnumURL.baseUrl}${product.images[0].name}`} alt=\"i\" />\n                      </span>\n                      <span className=\"product__item__text\">{formatMoney(product.price)}</span>\n                      <span className=\"product__item__text\">{product.description}</span>\n                      <span className=\"product__item__button\">\n                        <span onClick={() => handleClickEdit(product._id)}>📝</span>\n                      </span>\n                      <span className=\"product__item__button\">\n                        <span onClick={() => handleClickDelete(product._id)}>🗑️</span>\n                      </span>\n                    </div>\n                  )\n                })\n              }\n              {\n                visibleAdd === true && (\n                  <ProductModalAdd\n                    visible={visibleAdd}\n                    setVisible={setVisibleAdd}\n                  />\n                )\n              }\n              {\n                visibleEdit === true && (\n                  <ProductModalEdit\n                    _id={id}\n                    visible={visibleEdit}\n                    setVisible={setVisibleEdit}\n                  />\n                )\n              }\n              {\n                visibleDelete === true && (\n                  <ProductModalDelete\n                    _id={id}\n                    visible={visibleDelete}\n                    setVisible={setVisibleDelete}\n                  />\n                )\n              }\n            </>\n          )\n        }\n      </div>\n      <div className=\"product__pagination\">\n        <Pagination defaultCurrent={1} onChange={handleChangePagination} total={(pageLength / 6) * 10} />\n      </div>\n    </>\n  )\n}\n\nexport default ProductForm\n","import Layout from \"components/Layout\";\nimport Feed from \"./Product.Form\";\n\nconst ProductPage = () => {\n  return (\n    <Layout>\n      <Feed />\n    </Layout>\n  )\n}\n\nexport default ProductPage\n","import { Select } from \"antd\";\n\ninterface OrderTopDocument {\n  handleChange(value: string) : void;\n}\n\nconst { Option } = Select;\n\nconst OrderTop = ({ handleChange } : OrderTopDocument) => {\n  const handleSelect = (value: string) => {\n    handleChange(value);\n  }\n\n  return (\n    <div className=\"order__top\">\n      <h3 className=\"order__top__title\">Đơn hàng</h3>\n      <Select defaultValue=\"all\" style={{ width: 150 }} onChange={handleSelect}>\n        <Option value=\"all\">Tất cả</Option>\n        <Option value=\"unconfirmed\">Chưa xác nhận</Option>\n        <Option value=\"waiting\">Đang chờ</Option>\n        <Option value=\"shipping\">Đang giao</Option>\n        <Option value=\"shipped\">Đã giao</Option>\n        <Option value=\"cancled\">Đã hủy</Option>\n      </Select>\n    </div>\n  )\n}\n\nexport default OrderTop\n","import { ArrowUpOutlined, ArrowDownOutlined } from \"@ant-design/icons\";\nimport { FC } from \"react\";\n\ninterface OrderHeaderProps {\n  handleChangeTypeTime(value: string): void;\n}\n\nconst OrderHeader: FC<OrderHeaderProps> = ({ handleChangeTypeTime }) => {\n  return (\n    <div className=\"order__header\">\n      <span className=\"order__header__text\">\n        <ArrowUpOutlined onClick={() => handleChangeTypeTime(\"increment\")} />\n        <ArrowDownOutlined onClick={() => handleChangeTypeTime(\"decrement\")} />\n        Thời gian\n      </span>\n      <span className=\"order__header__text\">Khách hàng</span>\n      <span className=\"order__header__text\">Tổng</span>\n      <span className=\"order__header__text\">Địa chỉ</span>\n      <span className=\"order__header__text\">Trạng thái đơn</span>\n      <span className=\"order__header__text\">Thay đổi</span>\n      <span className=\"order__header__text\">Thanh toán</span>\n    </div>\n  )\n}\n\nexport default OrderHeader\n","import { Dispatch, SetStateAction, useState } from 'react';\nimport { Modal } from \"antd\";\nimport { AnimationModal, RefeshRoute } from \"../../utils/Common\";\nimport { UpdateStatusOrder } from '../../services/Setting.Service';\nimport { useHistory } from \"react-router-dom\";\n\ninterface OrderModal {\n  _id: string;\n  status: string;\n  show: boolean;\n  setShow: Dispatch<SetStateAction<boolean>>;\n}\n\nconst OrderModal = ({ _id, status, show, setShow }: OrderModal) => {\n  const [message, setMessage] = useState<string>(\"\");\n  const [confirmLoading, setConfirmLoading] = useState<boolean>(false);\n  const history = useHistory();\n\n  const handleOk = () => {\n    setConfirmLoading(true);\n    UpdateStatusOrder(_id, status)\n      .then(() => {\n        AnimationModal(setShow, setConfirmLoading);\n        RefeshRoute(history, \"/order\");\n      })\n      .catch((e) => {\n        console.log(e);\n        setMessage(\"Đã xảy ra lỗi\");\n        AnimationModal(setShow, setConfirmLoading);\n      })\n  };\n\n  const handleCancel = () => {\n    setShow(false);\n  };\n\n  return (\n    <Modal\n      title=\"Cập nhật thông tin đơn hàng\"\n      visible={show}\n      confirmLoading={confirmLoading}\n      onOk={handleOk}\n      onCancel={handleCancel}\n    >\n      {\n        message ? (\n          <p className=\"release-status\">{message}</p>\n        ) : (\n          <p>Bạn đã chắn chắn đã thực hiện đúng quy trình ?</p>\n        )\n      }\n    </Modal>\n  );\n}\n\nexport default OrderModal;\n","import { useState, useEffect } from 'react'\nimport Spinner from 'components/Spinner';\nimport { GetListOrders, GetListOrdersWithStatus, GetListOrderSortedByTime, OrderIsPaid } from 'services/Setting.Service';\nimport OrderHeader from './Order.Top';\nimport HeaderBottom from \"./Order.Header\";\nimport { OrderDocument } from 'interfaces/Order.Interface';\nimport { Button, Pagination } from \"antd\";\nimport { formatMoney, ConvertStatus, ConvertStatusButton, FormatDate } from 'utils/Common';\nimport OrderModal from './Order.Modal';\n\nconst OrderForm = () => {\n  const [orders, setOrders] = useState<OrderDocument[]>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [show, setShow] = useState<boolean>(false);\n  const [id, setID] = useState<string>(\"\");\n  const [status, setStatus] = useState<string>(\"\");\n  const [page, setPage] = useState<number>(1);\n  const [pageLength, setPageLength] = useState<number>(6);\n\n  useEffect(() => {\n    GetListNormal();\n  }, []);\n\n  const handleChange = (value: string) => {\n    setLoading(true);\n    setPageLength(6);\n    if (value === \"all\") {\n      GetListNormal();\n    }\n    else {\n      GetListOrdersWithStatus(value)\n        .then(res => {\n          setLoading(false);\n          setOrders(res.data.result);\n        })\n        .catch((e) => {\n          setLoading(false);\n          console.log(e);\n        })\n\n    }\n  }\n\n  const GetListNormal = () => {\n    GetListOrders(page)\n      .then(res => {\n        console.log(res.data);\n        setPageLength(res.data.length);\n        setOrders(res.data.result);\n        setLoading(false);\n      })\n      .catch((e) => {\n        console.log(e);\n        setLoading(false);\n      });\n  }\n\n  const handleClickChangeStatus = (_id: string, status: string) => {\n    setShow(true);\n    setID(_id);\n    if (status === \"unconfirmed\") {\n      setStatus(\"waiting\");\n    }\n    if (status === \"waiting\") {\n      setStatus(\"shipping\");\n    }\n    if (status === \"shipping\") {\n      OrderIsPaid(_id)\n        .catch(e => console.log(e));\n    }\n  }\n\n  const handleChangeTypeTime = (value: string) => {\n    setLoading(true);\n    GetListOrderSortedByTime(value, page)\n      .then(res => {\n        setOrders(res.data.result);\n        setPageLength(res.data.length);\n        setLoading(false);\n      })\n      .catch(e => console.log(e));\n  }\n\n  const handleChangePage = (current: any) => {\n    setPage(current);\n  }\n\n  return (\n    <>\n      <div className=\"order\">\n        <OrderHeader handleChange={handleChange} />\n        <HeaderBottom handleChangeTypeTime={handleChangeTypeTime} />\n        {\n          loading ? (\n            <Spinner />\n          ) : (\n            <>\n              {\n                orders && orders.map(order => {\n                  return (\n                    <div className=\"order__item\" key={order._id}>\n                      <span className=\"order__item__text\">{FormatDate(order.requiredDate.toString())}</span>\n                      <span className=\"order__item__text\">{order.infoGuest.lastName + \" \" + order.infoGuest.firstName}</span>\n                      <span className=\"order__item__text\">{formatMoney(order.total)}</span>\n                      <span className=\"order__item__text\">{order.infoGuest.address}</span>\n                      <span className=\"order__item__text\">{ConvertStatus(order.status)}</span>\n                      <span className=\"order__item__button\">\n                        {\n                          ConvertStatusButton(order.status) && (\n                            <Button onClick={() => handleClickChangeStatus(order._id, order.status)}>\n                              {ConvertStatusButton(order.status)}\n                            </Button>\n                          )\n                        }\n                      </span>\n                      <span className=\"order__item__button\">\n                        {\n                          order.paid ? \"Đã thanh toán\" : \"Chưa thanh toán\" \n                        }\n                      </span>\n                    </div>\n                  )\n                })\n              }\n              {\n                show === true && (\n                  <OrderModal\n                    _id={id}\n                    status={status}\n                    show={show}\n                    setShow={setShow}\n                  />\n                )\n              }\n            </>\n          )\n        }\n      </div>\n      <div className=\"product__pagination\">\n        <Pagination defaultCurrent={1} onChange={handleChangePage} total={(pageLength / 6) * 10} />\n      </div>\n    </>\n  )\n}\n\nexport default OrderForm\n","import Layout from \"../../components/Layout\";\nimport Feed from \"./Order.Form\";\n\nconst OrderPage = () => {\n  return (\n    <Layout>\n      <Feed />\n    </Layout>\n  )\n}\n\n\nexport default OrderPage\n","import { FC } from 'react';\n\ninterface StatisticHeaderProps {\n  handleChange(value: string): void;\n}\n\nconst StatisticHeader: FC<StatisticHeaderProps> = ({ handleChange }) => {\n  return (\n    <div className=\"statistic__header\">\n      <h3 className=\"statistic__header__title\">Thống kê theo</h3>\n      <div className=\"statistic__header__type\">\n        <div className=\"statistic__header__type__text\" onClick={() => handleChange(\"day\")}>\n          <span>Ngày</span>\n        </div>\n        <div className=\"statistic__header__type__text\" onClick={() => handleChange(\"month\")}>\n          <span>Tháng</span>\n        </div>\n        <div className=\"statistic__header__type__text\" onClick={() => handleChange(\"year\")}>\n          <span>Năm</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StatisticHeader\n","import { useState, useEffect } from \"react\";\nimport { DatePicker, Button, Spin } from 'antd';\nimport { StatisticOrderByDay } from \"services/Setting.Service\";\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { formatMoney } from \"utils/Common\";\n\nconst StatisticDay = () => {\n  const [click, setClick] = useState<boolean>(false);\n  const [date, setDate] = useState<string>(\"\");\n  const [count, setCount] = useState<number>(0);\n  const [total, setTotal] = useState<number>(0);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (click) {\n      StatisticOrderByDay(date)\n        .then(res => {\n          setLoading(false);\n          setCount(res.data.result.count);\n          setTotal(res.data.result.total);\n        })\n        .catch(e => console.log(e));\n    }\n  }, [click]);\n\n  const handleChangeDay = (date: any, dateString: string) => {\n    setClick(false);\n    setDate(dateString);\n    setLoading(true);\n  }\n\n  const handleGetStatistic = () => {\n    if (!date) {\n      return;\n    }\n    \n    setClick(true);\n  }\n\n  const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n\n  return (\n    <div className=\"statistic__day\">\n      <DatePicker\n        className=\"statistic__day__picker\"\n        placeholder=\"Chọn ngày\" \n        onChange={handleChangeDay} \n      /> <br />\n      <Button onClick={handleGetStatistic}>Thống kê</Button>\n      {\n        click && (\n          <div className=\"statistic__day__form\">\n            <p>Tổng số đơn đã giao: {loading ? <Spin indicator={antIcon} /> : count}</p>\n            <p>Tổng doanh thu: {loading ? <Spin indicator={antIcon} /> : formatMoney(total)}</p>\n          </div>\n        ) \n      }\n    </div>\n  )\n}\n\nexport default StatisticDay\n","import { useState, useEffect } from 'react';\nimport { Column } from \"@ant-design/charts\";\nimport { StatisticOrderByMonth } from '../../services/Setting.Service';\nimport Spinner from '../../components/Spinner';\nimport { DatePicker, Button } from \"antd\";\n\nconst StatisticMonth = () => {\n  const [year, setYear] = useState<number>(0);\n  const [loading, setLoading] = useState<boolean>();\n  const [data, setData] = useState<any[]>([]);\n  const [config, setConfig] = useState<any>();\n  const [statistic, setStatistic] = useState([{ month: 0, total: 0}]);\n\n  useEffect(() => {\n    for (let i = 0; i < statistic.length; i++) {\n      //@ts-ignore\n      const custom = { month: statistic[i].month, value: statistic[i].total }\n      setData(prev => [...prev, custom]);\n    }\n  }, [statistic]);\n\n  useEffect(() => {\n    setConfig({\n      data,\n      height: 400,\n      xField: 'month',\n      yField: 'value',\n      xAxis: { label: { autoRotate: false } },\n      scrollbar: { type: 'horizontal' },\n    })\n  }, [data]);\n\n  const handleGetMonth = (data: any, year: string) => {\n    setYear(parseInt(year));\n    setData([]);\n    setConfig({});\n    setStatistic([{ month: 0, total: 0 }])\n  }\n\n  const handleClick = () => {\n    if (year === 0) {\n      return;\n    }\n\n    setLoading(true);\n    StatisticOrderByMonth(year)\n      .then(res => {\n        setStatistic(res.data.result);\n        setLoading(false);\n      })\n      .catch(e => {\n        console.log(e);\n        setLoading(false);\n      })\n  }\n\n  return (\n    <div className=\"statistic__month\">\n      <DatePicker\n        className=\"statistic__month__picker\"\n        onChange={handleGetMonth}\n        picker=\"year\"\n        placeholder=\"Chọn năm\"\n      />\n      <Button onClick={handleClick}>Thống kê</Button>\n      {\n        loading ? (\n          <Spinner />\n        ) : (\n          <> {config && <Column {...config} />} </>\n        )\n      }\n    </div>\n  )\n}\n\nexport default StatisticMonth\n","import { useState, useEffect } from 'react';\nimport { Column } from \"@ant-design/charts\";\nimport { StatisticOrderByYear} from '../../services/Setting.Service';\nimport Spinner from '../../components/Spinner';\n\nconst StatisticYear = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [data, setData] = useState<any[]>([]);\n  const [config, setConfig] = useState<any>();\n  const [statistic, setStatistic] = useState([]);\n\n  useEffect(() => {\n    StatisticOrderByYear()\n      .then(res => {\n        setStatistic(res.data.result);\n        setLoading(false);\n      })\n      .catch(e => {\n        console.log(e);\n        setLoading(false);\n      })\n  }, []);\n\n  useEffect(() => {\n    for (let i = 0; i < statistic.length; i++) {\n      //@ts-ignore\n      const custom = { year: statistic[i].year, value: statistic[i].total }\n      setData(prev => [...prev, custom]);\n    }\n  }, [statistic]);\n\n  useEffect(() => {\n    setConfig({\n      data,\n      height: 400,\n      xField: 'year',\n      yField: 'value',\n      xAxis: { label: { autoRotate: false } },\n      scrollbar: { type: 'horizontal' },\n    })\n  }, [data]);\n\n  return (\n    <>\n      {\n        loading ? (\n          <Spinner />\n        ) : (\n          <div className=\"statistic__month\">\n            {\n              config && <Column {...config} />\n            }\n          </div>\n        )\n      }\n    </>\n  )\n}\n\nexport default StatisticYear\n","import { useState } from \"react\";\nimport Header from \"./Statistic.Header\";\nimport Day from \"./Statistic.Day\";\nimport Month from \"./Statistic.Month\";\nimport Year from \"./Statistic.Year\";\n\nconst StatisticForm = () => {\n  const [selected, setSelected] = useState({\n    day: true,\n    month: false,\n    year: false,\n  });\n\n  const handleChangeStatistic = (value: string) => {\n    if (value === \"day\") setSelected({ day: true, month: false, year: false });\n    if (value === \"month\") setSelected({ day: false, month: true, year: false });\n    if (value === \"year\") setSelected({ day: false, month: false, year: true });\n  }\n\n  return (\n    <div>\n      <Header handleChange={handleChangeStatistic} />\n      { selected.day && <Day /> }\n      { selected.month && <Month/> }\n      { selected.year && <Year/> }\n    </div>\n  )\n}\n\nexport default StatisticForm\n","import Layout from \"components/Layout\";\nimport Feed from \"./Statistic.Form\";\n\nconst StatisticPage = () => {\n  return (\n    <Layout>\n      <Feed />\n    </Layout>\n  )\n}\n\nexport default StatisticPage\n","const FormDataRegister: Array<any> = [\n  {\n    id: 0,\n    label: \"Họ\",\n    name: \"lastName\",\n    message: \"Họ không được trống\"\n  },\n  {\n    id: 1,\n    label: \"Tên\",\n    name: \"firstName\",\n    message: \"Tên không được trống\"\n  },\n  {\n    id: 2,\n    label: \"Địa chỉ\",\n    name: \"address\",\n    message: \"Địa chỉ không được trống\"\n  },\n  {\n    id: 3,\n    label: \"Số điện thoại\",\n    name: \"phone\",\n    message: \"Số điện thoại không được trống\"\n  },\n  {\n    id: 4,\n    label: \"Email\",\n    name: \"email\",\n    message: \"Email không được trống\"\n  },\n  {\n    id: 5,\n    label: \"Mật khẩu\",\n    name: \"password\",\n    message: \"Mật khẩu không được trống\"\n  },\n  {\n    id: 6,\n    label: \"Xác nhận mật khẩu\",\n    name: \"cPassword\",\n    message: \"Mật khẩu xác nhận không được trống\"\n  }\n]\n\nexport default FormDataRegister;\n","import { ChangeEvent, useState } from 'react';\nimport { Form, Button, Input, notification } from \"antd\";\nimport UserDocument from 'interfaces/User.Interface';\nimport { useHistory } from \"react-router-dom\";\nimport FormDataRegister from \"./Register.Data\";\nimport { CreateAccountForStaff } from 'services/Setting.Service';\nimport { ValidateEmail, ValidatePhone, ValidatePassword, ComparePassword } from 'utils/Validate';\n\nconst RegisterForm = () => {\n  const [message, setMessage] = useState<string>();\n  const [user, setUser] = useState<UserDocument>({\n    firstName: \"\",\n    lastName: \"\",\n    address: \"\",\n    phone: \"\",\n    email: \"\",\n    password: \"\",\n    cPassword: \"\",\n  });\n  const history = useHistory();\n\n  const handleInputText = (e: ChangeEvent<HTMLInputElement>, name: string) => {\n    if (name === \"firstName\") {\n      setUser(prev => ({ ...prev, firstName: e.target.value }));\n    }\n    if (name === \"lastName\") {\n      setUser(prev => ({ ...prev, lastName: e.target.value }));\n    }\n    if (name === \"address\") {\n      setUser(prev => ({ ...prev, address: e.target.value }));\n    }\n    if (name === \"phone\") {\n      setUser(prev => ({ ...prev, phone: e.target.value }));\n    }\n    if (name === \"email\") {\n      setUser(prev => ({ ...prev, email: e.target.value }));\n    }\n    if (name === \"password\") {\n      setUser(prev => ({ ...prev, password: e.target.value }));\n    }\n    if (name === \"cPassword\") {\n      setUser(prev => ({ ...prev, cPassword: e.target.value }));\n    }\n  }\n\n  const handleClickSignUp = () => {\n    if (!ValidatePhone(user.phone)) {\n      setMessage(\"Số điện thoại không phù hợp\");\n      return;\n    }\n\n    if (!ValidateEmail(user.email)) {\n      setMessage(\"Email không đúng định dạng\");\n      return;\n    }\n\n    if (user.password.length < 8 || user.cPassword.length < 8) {\n      setMessage(\"Mật khẩu ít nhất 8 ký tự\");\n      return;\n    }\n\n    if (!ComparePassword(user.password, user.cPassword)) {\n      setMessage(\"Mật khẩu xác nhận không trùng khớp\");\n      return;\n    }\n\n    if (!ValidatePassword(user.password, user.cPassword)) {\n      setMessage(\"Mật khẩu bao gồm ký tự in hoa và ký tự thường\");\n      return;\n    }\n\n    CreateAccountForStaff(user)\n      .then(() => {\n        notification['success']({\n          message: 'Thông báo',\n          description:\n            'Tạo tài khoản thành công',\n        });\n        history.push(\"/\");\n        history.push(\"/create-account\");\n      })\n      .catch(e => {\n        console.log(e);\n        setMessage(\"Đăng kí thất bại\");\n      })\n  }\n\n  return (\n    <div className=\"register\">\n      <h3 className=\"register__header\">Tạo tài khoản</h3>\n      <Form className=\"register__form\"\n        name=\"basic\" labelCol={{ span: 8, }}\n        wrapperCol={{ span: 16, }}\n        initialValues={{ remember: true, }}\n      >\n        {\n          FormDataRegister.map(item => {\n            return (\n              <Form.Item key={item.id} className=\"register__form__item\"\n                label={item.label} name={item.name}\n                rules={[\n                  {\n                    required: true,\n                    message: item.message,\n                  },\n                ]}\n              >\n                {\n                  (item.name === \"password\" || item.name === \"cPassword\") ? (\n                    <Input.Password onChange={(e) => handleInputText(e, item.name)} />\n                  ) : (\n                    <Input onChange={(e) => handleInputText(e, item.name)} />\n                  )\n                }\n              </Form.Item>\n            )\n          })\n        }\n        <Form.Item wrapperCol={{ offset: 8, span: 16, }} className=\"register__form__button\">\n          <p className=\"release-status\">{message}</p>\n          <Button type=\"primary\" htmlType=\"submit\" onClick={handleClickSignUp}>\n            Đăng ký\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n}\n\nexport default RegisterForm\n","export const ValidatePhone = (phone: string) => {\n  if (!phone.match(/(84|0[3|5|7|8|9])+([0-9]{8,9})\\b/)) {\n    return false;\n  }\n  return true;\n}\n\nexport const ValidateEmail = (email: string) => {\n  if (!email.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)) {\n    return false;\n  }\n  return true;\n};\n\nexport const ValidatePassword = (password: string, cPassword: string) => {\n  if (\n    !password.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/) ||\n    !cPassword.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const ComparePassword = (password: string, cPassword: string) => {\n  if (password !== cPassword) {\n    return false;\n  }\n  return true;\n};\n","import Layout from \"components/Layout\";\nimport Form from \"./Register.Form\";\n\nconst RegisterPage = () => {\n  return (\n    <Layout>\n      <Form/>\n    </Layout>\n  )\n}\n\nexport default RegisterPage\n","import React from 'react'\n\nconst ReceiptHeader = () => {\n  return (\n    <div className=\"receipt__header\">\n      <span className=\"receipt__header__item__text\">Ngày nhập</span>\n      <span className=\"receipt__header__item__text\">Danh mục</span>\n      <span className=\"receipt__header__item__text\">Số lượng tồn</span>\n      <span className=\"receipt__header__item__text\">Giá tiền</span>\n      <span className=\"receipt__header__item__text\">Người nhập</span>\n      <span className=\"receipt__header__item__text\"></span>\n    </div>\n  )\n}\n\nexport default ReceiptHeader\n","import { useState, useEffect, FC, Dispatch, SetStateAction, ChangeEvent } from 'react';\nimport { GetListCategories, AddReceipt } from \"services/Setting.Service\";\nimport { Modal, Input, Form, Select, notification } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { CategoryDocument } from 'interfaces/Category.Inteface';\nimport { AnimationModal, RefeshRoute } from 'utils/Common';\nimport Spinner from 'components/Spinner';\n\ninterface ReceiptAddProps {\n  show: boolean;\n  setShow: Dispatch<SetStateAction<boolean>>;\n}\n\nconst { Option } = Select;\n\nconst ReceiptModalAdd: FC<ReceiptAddProps> = ({ show, setShow }) => {\n  const [receipt, setReceipt] = useState({ quantityStock: 0, price: 0 });\n  const [categories, setCategories] = useState<CategoryDocument[]>();\n  const [categoryID, setCategoryID] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [confirmLoading, setConfirmLoading] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    GetListCategories()\n      .then(res => {\n        setLoading(false);\n        setCategories(res.data.result);\n      })\n      .catch(e => {\n        setLoading(false);\n        console.log(e);\n      });\n  }, []);\n\n  const handleOk = () => {\n    if (!receipt.quantityStock || !receipt.price || !categoryID) {\n      setMessage(\"Thông tin không được trống\");\n      return;\n    }\n    setConfirmLoading(true);\n    AddReceipt(receipt.quantityStock, receipt.price, categoryID)\n      .then(() => {\n        handleNotificationSuccess();\n        AnimationModal(setShow, setConfirmLoading);\n        RefeshRoute(history, \"/receipt\");\n      })\n      .catch(e => {\n        console.log(e);\n        AnimationModal(setShow, setConfirmLoading);\n        handleNotificationFailed();\n        setMessage(\"Thêm phiếu nhập thất bại\");\n      })\n  }\n\n  const handleCancel = () => {\n    setShow(false);\n  }\n\n  const onChange = (value: string) => {\n    setCategoryID(value);\n  }\n\n  const handleInputQuantityStock = (e: ChangeEvent<HTMLInputElement>) => {\n    setMessage(\"\");\n    setReceipt(prev => ({ ...prev, quantityStock: e.target.value as any }));\n  }\n\n  const handleInputPrice = (e: ChangeEvent<HTMLInputElement>) => {\n    setMessage(\"\");\n    setReceipt(prev => ({ ...prev, price: e.target.value as any }));\n  }\n\n  const handleNotificationSuccess = () => {\n    notification[\"success\"]({\n      message: 'Thông báo',\n      description:\n        'Thêm phiếu nhập kho thành công',\n    });\n  }\n\n  const handleNotificationFailed = () => {\n    notification[\"warning\"]({\n      message: 'Thông báo',\n      description:\n        'Đã xảy ra lỗi!',\n    });\n  }\n\n  return (\n    <Modal\n      title=\"Thêm phiếu nhập\"\n      visible={show}\n      confirmLoading={confirmLoading}\n      onOk={handleOk}\n      onCancel={handleCancel}\n    >\n      {\n        loading ? <Spinner /> : (\n          <>\n            <Form.Item\n              label=\"Số lượng nhập\"\n              name=\"quantityStock\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Số lượng nhập không được trống!',\n                },\n              ]}\n            >\n              <Input onChange={(e) => handleInputQuantityStock(e)} type=\"number\" />\n            </Form.Item>\n            <Form.Item\n              label=\"Giá nhập\"\n              name=\"quantityStock\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Giá nhập không được trống!',\n                },\n              ]}\n            >\n              <Input onChange={(e) => handleInputPrice(e)} type=\"number\" />\n            </Form.Item>\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"Loại danh mục\"\n              optionFilterProp=\"children\"\n              onChange={onChange}\n              filterOption={(input, option) =>\n                //@ts-ignore\n                option?.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              {\n                categories && categories.map(category => {\n                  return (\n                    <Option\n                      key={category._id}\n                      value={category._id}\n                    >\n                      {category.name}\n                    </Option>\n                  )\n                })\n              }\n            </Select>\n            <p className=\"modal__status__error\">{message}</p>\n          </>\n        )\n      }\n    </Modal>\n  )\n}\n\nexport default ReceiptModalAdd\n","import { useState, useEffect, FC, Dispatch, SetStateAction, ChangeEvent } from 'react';\nimport { GetReceiptByID, GetListCategories, EditReceipt } from \"services/Setting.Service\";\nimport { Modal, Input, notification } from \"antd\";\nimport { CategoryDocument } from 'interfaces/Category.Inteface';\nimport { useHistory } from \"react-router-dom\";\nimport { Select } from \"antd\";\nimport Spinner from 'components/Spinner';\nimport { AnimationModal, RefeshRoute } from 'utils/Common';\n\ninterface ReceiptAddProps {\n  id: string;\n  show: boolean;\n  setShow: Dispatch<SetStateAction<boolean>>;\n}\n\nconst { Option } = Select;\n\nconst ReceiptModalEdit: FC<ReceiptAddProps> = ({ id, show, setShow }) => {\n  const [receipt, setReceipt] = useState({ quantityStock: 0, price: 0, category: \"\" });\n  const [categories, setCategories] = useState<CategoryDocument[]>();\n  const [loadingReceipt, setLoadingReceipt] = useState<boolean>(true);\n  const [loadingCate, setLoadingCate] = useState<boolean>(true);\n  const [confirmLoading, setConfirmLoading] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    GetReceiptByID(id)\n      .then(res => {\n        setLoadingReceipt(false);\n        setReceipt(res.data.result);\n      })\n      .catch(e => {\n        setLoadingReceipt(false);\n        console.log(e);\n      });\n  }, []);\n\n  useEffect(() => {\n    GetListCategories()\n      .then(res => {\n        setLoadingCate(false);\n        setCategories(res.data.result);\n      })\n      .catch(e => {\n        setLoadingCate(false);\n        console.log(e);\n      });\n  }, []);\n\n  const handleOk = () => {\n    if (receipt.quantityStock === 0 || receipt.price === 0 || !receipt.category) {\n      setMessage(\"Thông tin không được trống\");\n      return;\n    }\n\n    setConfirmLoading(true);\n    EditReceipt(id, receipt.quantityStock, receipt.price, receipt.category)\n      .then(() => {\n        handleNotificationSuccess();\n        AnimationModal(setShow, setConfirmLoading);\n        RefeshRoute(history, \"/receipt\");\n      })\n      .catch(e => {\n        console.log(e);\n        AnimationModal(setShow, setConfirmLoading);\n        handleNotificationFailed();\n        setMessage(\"Sửa phiếu nhập thất bại\");\n      })\n  }\n\n  const handleChangeSelect = (value: string) => {\n    setReceipt(prev => ({ ...prev, category: value }));\n  }\n\n  const handleInputQuantityStock = (e: ChangeEvent<HTMLInputElement>) => {\n    setReceipt(prev => ({ ...prev, quantityStock: e.target.value as any }));\n  }\n\n  const handleInputPrice = (e: ChangeEvent<HTMLInputElement>) => {\n    setReceipt(prev => ({ ...prev, price: e.target.value as any }));\n  }\n\n  const handleNotificationSuccess = () => {\n    notification[\"success\"]({\n      message: 'Thông báo',\n      description:\n        'Sửa phiếu nhập kho thành công',\n    });\n  }\n\n  const handleNotificationFailed = () => {\n    notification[\"warning\"]({\n      message: 'Thông báo',\n      description:\n        'Đã xảy ra lỗi!',\n    });\n  }\n\n  return (\n    <Modal\n      title=\"Sửa phiếu nhập\"\n      visible={show}\n      confirmLoading={confirmLoading}\n      onOk={handleOk}\n      onCancel={() => setShow(false)}\n    >\n      {\n        ( loadingReceipt|| loadingCate) ? (\n          <Spinner />\n        ) : (\n          <>\n            <p>*Thể loại:</p>\n            {\n              receipt && categories && (\n                <Select defaultValue={receipt.category} onChange={handleChangeSelect} style={{ width: 200 }}>\n                  {\n                    categories.map(category => {\n                      return (\n                        <Option key={category._id} value={category._id}>{category.name}</Option>\n                      )\n                    })\n                  }\n                </Select>\n              )\n            }\n            <p>*Số lượng tồn:</p>\n            <Input value={receipt?.quantityStock} type=\"number\" onChange={(e) => handleInputQuantityStock(e)} />\n            <p>*Giá:</p>\n            <Input value={receipt?.price} type=\"number\" onChange={(e) => handleInputPrice(e)} />\n            {message && <p className=\"release-status\">{message}</p>}\n          </>\n        )\n      }\n    </Modal>\n  )\n}\n\nexport default ReceiptModalEdit\n","import { Dispatch, SetStateAction, useState } from 'react';\nimport { DeleteReceipt } from 'services/Setting.Service';\nimport { AnimationModal, RefeshRoute } from 'utils/Common';\nimport { Modal, notification } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface ReceiptDeleteProps {\n  id: string;\n  show: boolean;\n  setShow: Dispatch<SetStateAction<boolean>>;\n}\n\nconst ReceiptModalDelete = ({ id, show, setShow }: ReceiptDeleteProps) => {\n  const [modalText, setModalText] = useState<string>('');\n  const [confirmLoading, setConfirmLoading] = useState<boolean>(false);\n  const history = useHistory();\n  \n  const handleOk = () => {\n    setConfirmLoading(true);\n    DeleteReceipt(id)\n      .then(() => {\n        AnimationModal(setShow, setConfirmLoading);\n        handleNotificationSuccess();\n        RefeshRoute(history, \"/receipt\");\n      })\n      .catch((e) => {\n        console.log(e);\n        handleNotificationFailed();\n        setModalText(\"Đã xảy ra lỗi!\");\n        AnimationModal(setShow, setConfirmLoading);\n      })\n  }\n\n  const handleCancel = () => {\n    setShow(false);\n  }\n\n  const handleNotificationSuccess = () => {\n    notification['success']({\n      message: 'Thông báo',\n      description:\n        'Xóa phiếu nhập thành công',\n    });\n  }\n\n  const handleNotificationFailed = () => {\n    notification['warning']({\n      message: 'Thông báo',\n      description:\n        'Đã xảy ra lỗi',\n    });\n  }\n\n  return (\n    <Modal\n      title=\"Xóa phiếu nhập\"\n      visible={show}\n      confirmLoading={confirmLoading}\n      onOk={handleOk}\n      onCancel={handleCancel}\n    >\n      {\n        modalText ? (\n          <p className=\"modal__status__error\">{modalText}</p>\n        ) : (\n          <p>Bạn có chắc chắn muốn xóa ?</p>\n        )\n      }\n    </Modal>\n  )\n}\n\nexport default ReceiptModalDelete\n","import { useState, useEffect } from \"react\";\nimport Header from \"components/Header\";\nimport SHeader from \"./Receipt.Header\";\nimport ReceiptDocument from \"interfaces/Receipt.Interface\";\nimport { GetListReceipt } from \"services/Setting.Service\";\nimport { FormatDate, formatMoney, FormatQuantityStock } from \"utils/Common\";\nimport Spinner from \"components/Spinner\";\nimport Add from \"./Receipt.Modal.Add\";\nimport Edit from \"./Receipt.Modal.Edit\";\nimport Delete from \"./Receipt.Modal.Delete\";\n\nconst ReceiptForm = () => {\n  const [receipts, setReceipts] = useState<ReceiptDocument[]>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [showAdd, setShowAdd] = useState<boolean>(false);\n  const [showEdit, setShowEdit] = useState<boolean>(false);\n  const [showDelete, setShowDelete] = useState<boolean>(false);\n  const [id, setID] = useState<string>(\"\");\n\n  useEffect(() => {\n    GetListReceipt()\n      .then((res) => {\n        setLoading(false);\n        setReceipts(res.data.result);\n      })\n      .catch(e => console.log(e));\n  }, []);\n\n  const handleClickEdit = (id: string) => {\n    setID(id);\n    setShowEdit(true);\n  }\n\n  const handleClickDelete = (id: string) => {\n    setID(id);\n    setShowDelete(true);\n  }\n\n  return (\n    <>\n      <div className=\"receipt\">\n        <Header headerName=\"Phiếu nhập\" setShowAdd={setShowAdd} />\n        <SHeader />\n        {\n          loading ? <Spinner /> : (\n            <>\n              {\n                receipts && receipts.map(item => {\n                  return (\n                    <div className=\"receipt__item\" key={item._id}>\n                      <span className=\"receipt__item__text\">{FormatDate(item.dateGet)}</span>\n                      <span className=\"receipt__item__text\">{item.category}</span>\n                      <span className=\"receipt__item__text\">{FormatQuantityStock(item.quantityStock)}</span>\n                      <span className=\"receipt__item__text\">{formatMoney(item.price)}</span>\n                      <span className=\"receipt__item__text\">{item.user}</span>\n                      <span className=\"receipt__item__text\">\n                        <span className=\"receipt__item__text__button\" onClick={() => handleClickEdit(item._id)}>📝</span>\n                        <span className=\"receipt__item__text__button\" onClick={() => handleClickDelete(item._id)}>🗑️</span>\n                      </span>\n                    </div>\n                  )\n                })\n              }\n              {\n                showAdd && <Add show={showAdd} setShow={setShowAdd} />\n              }\n              {\n                showEdit && <Edit id={id} show={showEdit} setShow={setShowEdit} />\n              }\n              {\n                showDelete && <Delete id={id} show={showDelete} setShow={setShowDelete} />\n              }\n            </>\n          )\n        }\n      </div>\n    </>\n  )\n}\n\nexport default ReceiptForm\n","import Layout from \"components/Layout\";\nimport Form from \"./Receipt.Form\";\n\nconst ReceiptPage = () => {\n  return (\n    <Layout>\n      <Form />\n    </Layout>\n  )\n}\n\nexport default ReceiptPage\n","import \"./styles/index.scss\";\nimport 'antd/dist/antd.css';\nimport { Layout } from 'antd';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport PrivateRoute from './routes/Private.Route';\nimport LoginPage from 'pages/login/Login.Page';\nimport CategoryPage from 'pages/category/Category.Page';\nimport ProductPage from 'pages/product/Product.Page';\nimport OrderPage from 'pages/order/Order.Page';\nimport StatisticPage from 'pages/statistic/Statistic.Page';\nimport RegisterPage from \"pages/register/Register.Page\";\nimport ReceiptPage from \"pages/receipt/Receipt.Page\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Router>\n        <Route exact path=\"/\" component={LoginPage} />\n        <PrivateRoute path=\"/receipt\" component={ReceiptPage} />\n        <PrivateRoute path=\"/category\" component={CategoryPage} />\n        <PrivateRoute path=\"/product\" component={ProductPage} />\n        <PrivateRoute path=\"/order\" component={OrderPage} />\n        <PrivateRoute path=\"/statistic\" component={StatisticPage} />\n        <PrivateRoute path=\"/create-account\" component={RegisterPage} />\n      </Router>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}